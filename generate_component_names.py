#!/usr/bin/python
import os

names_file_name = "ComponentNames.h"
includes_file_name = "ComponentList.h"

#scan filesystem for components
components_with_suffix = os.listdir("src/components/")
components = []
for c in components_with_suffix:
	components.insert(0, os.path.splitext(c)[0])

#Generate ComponentNames.h----------------------------------------------------
lines = [
	"/*",
	" * ComponentNames.h",
	" * This file should be automatically generated by the python script",
	" * generate_component_names.py",
	" */",
	"",
	"#ifndef SRC_COMPONENTNAMES_H_",
	"#define SRC_COMPONENTNAMES_H_",
	"",
	"#include <string>",
	"",
	"namespace Cat",
	"{",
	"\tint NUM_COMPONENT_TYPES = " + str(len(components)) + ";",
	"",
	"\tstd::string component_names = {"
]

#insert components into string type
for c in components:
	lines.append('\t\t"{}",'.format(c))

lines2 = [
	"\t};",
	"",
	"\tenum ComponentType {"
]
for l in lines2:
	lines.append(l)

#insert components into enum
for c in components:
	lines.append('\t\t{},'.format(c))

lines3 = [
	"\t};",
	"}",
	"",
	"#endif /* SRC_COMPONENTNAMES_H_ */"
]
for l in lines3:
	lines.append(l)

print("writing new " + names_file_name)

f = open('src/' + names_file_name, 'w')
f.truncate(0)
counter = 0
for l in lines:
	print(l, file=f)
	counter += 1

print("wrote " + str(counter) + " lines to " + names_file_name)
f.close()
#Done generating ComponentNames.h---------------------------------------------

#Generate ComponentList.h-----------------------------------------------------
lines.clear()
lines = [
	"/*",
	" * ComponentList.h",
	" * This file should be automatically generated by the python script",
	" * generate_component_names.py",
	" */",
	"",
	"#ifndef SRC_COMPONENTLIST_H_",
	"#define SRC_COMPONENTLIST_H_",
	""
]

#insert components as includes
for c in components:
	lines.append('#include "components/{}.h"'.format(c))

lines.append("")
lines.append("#endif /* SRC_COMPONENTLIST_H_ */")

print("writing new " + includes_file_name)

f = open('src/' + includes_file_name, 'w')
f.truncate(0)
counter = 0
for l in lines:
	print(l, file=f)
	counter += 1

print("wrote " + str(counter) + " lines to " + includes_file_name)
f.close()
#Done generating ComponentList.h----------------------------------------------
