name: CI - Source & Examples - Windows

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        compiler: [mingw, msvc16]
        bits: [32, 64]
        include:
        - compiler: mingw
          bits: 32
          CFLAGS: -m32
          GENERATOR: "MinGW Makefiles"
        - compiler: mingw
          bits: 64
          CFLAGS: -m64
          GENERATOR: "MinGW Makefiles"
        - compiler: msvc16
          bits: 32
          GENERATOR: "Visual Studio 16 2019"
          ARCH: "-A Win32"  
        - compiler: msvc16
          bits: 64
          GENERATOR: "Visual Studio 16 2019"
          ARCH: "-A x64" 
          
    env:
      CFLAGS: ${{ matrix.CFLAGS }}

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup Environment
      run: | 
        mkdir build
        cd build
        
    # Trying to solve an issue with CMake and Chocolatey for MinGW
    - run: cmake -E remove c:\ProgramData\chocolatey\bin\cpack.exe
      if: matrix.compiler == 'mingw'

    # Setup MSBuild.exe path if required
    - uses: warrenbuckley/Setup-MSBuild@v1
      if: matrix.compiler == 'msvc16'
   
    - name: Build MinGW Project
      run: |
        cd ../raylib/src
        make PLATFORM=PLATFORM_DESKTOP CC=gcc
      if: matrix.compiler == 'mingw'

    - name: Setup CMake Project
      run: cmake -G "${{ matrix.GENERATOR }}" ${{ matrix.ARCH }} -DCMAKE_SH="CMAKE_SH-NOTFOUND" -DSTATIC=ON -DSHARED=ON -DBUILD_EXAMPLES=ON -DBUILD_GAMES=OFF -DINCLUDE_EVERYTHING=ON ../raylib
      if: matrix.compiler == 'msvc16'
      
    - name: Build raylib Source & Examples
      run: cmake --build . --target install
      if: matrix.compiler == 'msvc16'
